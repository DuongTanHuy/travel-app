{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFonts } from \"expo-font\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useFonts = useFonts({\n      light: require(\"./assets/fonts/light.otf\"),\n      regular: require(\"./assets/fonts/regular.otf\"),\n      medium: require(\"./assets/fonts/medium.otf\"),\n      bold: require(\"./assets/fonts/bold.otf\"),\n      xtrabold: require(\"./assets/fonts/xtrabold.otf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoader = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontLoader) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontLoader]);\n  if (!fontLoader) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textStyle: {\n    fontFamily: \"xtrabold\",\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["useFonts","StatusBar","useCallback","StyleSheet","Text","View","SplashScreen","NavigationContainer","createNativeStackNavigator","jsx","_jsx","Stack","App","_useFonts","light","require","regular","medium","bold","xtrabold","_useFonts2","_slicedToArray","fontLoader","onLayoutRootView","_asyncToGenerator","hideAsync","children","Navigator","styles","create","container","flex","backgroundColor","alignItems","justifyContent","textStyle","fontFamily","fontSize"],"sources":["E:/DuongTanHuy/Front-end/react-native/Travel-app/react-native-travel-app-starter/travel_app/App.js"],"sourcesContent":["import { useFonts } from \"expo-font\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useCallback } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n  const [fontLoader] = useFonts({\r\n    light: require(\"./assets/fonts/light.otf\"),\r\n    regular: require(\"./assets/fonts/regular.otf\"),\r\n    medium: require(\"./assets/fonts/medium.otf\"),\r\n    bold: require(\"./assets/fonts/bold.otf\"),\r\n    xtrabold: require(\"./assets/fonts/xtrabold.otf\"),\r\n  });\r\n\r\n  const onLayoutRootView = useCallback(async () => {\r\n    if (fontLoader) {\r\n      await SplashScreen.hideAsync();\r\n    }\r\n  }, [fontLoader]);\r\n\r\n  if (!fontLoader) {\r\n    return null;\r\n  }\r\n\r\n  return <NavigationContainer>\r\n    <Stack.Navigator></Stack.Navigator>\r\n  </NavigationContainer>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textStyle: {\r\n    fontFamily: \"xtrabold\",\r\n    fontSize: 20,\r\n  },\r\n});\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,WAAW;AACpC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5E,IAAMC,KAAK,GAAGH,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASI,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAqBb,QAAQ,CAAC;MAC5Bc,KAAK,EAAEC,OAAO,2BAA2B,CAAC;MAC1CC,OAAO,EAAED,OAAO,6BAA6B,CAAC;MAC9CE,MAAM,EAAEF,OAAO,4BAA4B,CAAC;MAC5CG,IAAI,EAAEH,OAAO,0BAA0B,CAAC;MACxCI,QAAQ,EAAEJ,OAAO,8BAA8B;IACjD,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAR,SAAA;IANKS,UAAU,GAAAF,UAAA;EAQjB,IAAMG,gBAAgB,GAAGrB,WAAW,CAAAsB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,UAAU,EAAE;MACd,MAAMhB,YAAY,CAACmB,SAAS,CAAC,CAAC;IAChC;EACF,CAAC,GAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACA,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,OAAOZ,IAAA,CAACH,mBAAmB;IAAAmB,QAAA,EACzBhB,IAAA,CAACC,KAAK,CAACgB,SAAS,IAAkB;EAAC,CAChB,CAAC;AACxB;AAEA,IAAMC,MAAM,GAAGzB,UAAU,CAAC0B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDC,SAAS,EAAE;IACTC,UAAU,EAAE,UAAU;IACtBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}